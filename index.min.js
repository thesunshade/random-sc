const suttaArea = document.getElementById("sutta"),
  homeButton = document.getElementById("home-button"),
  previous = document.getElementById("previous"),
  next = document.getElementById("next");
function buildSutta(t) {
  t = t.toLowerCase();
  let e = '<div class="button-area"><button id="hide-pali" class="hide-button">Toggle Pali</button></div>';
  const n = fetch(`https://suttacentral.net/api/bilarasuttas/${t}/sujato?lang=en`)
      .then(t => t.json())
      .catch(e => {
        suttaArea.innerHTML = `Sorry, "${decodeURIComponent(
          t
        )}" is not a valid sutta citation.\n      <br><br>\n      Note: <br>\n      Citations cannot contain spaces.<br>\n      Chapter and sutta number should be separated by a period.<br>\n      Only dn, mn, sn, and an are valid books.<br>\n      Suttas that are part of a series require that you enter the exact series.`;
      }),
    a = fetch(`https://suttacentral.net/api/suttas/${t}/sujato?lang=en&siteLanguage=en`).then(t => t.json());
  Promise.all([n, a]).then(n => {
    const [a, o] = n,
      { html_text: i, translation_text: l, root_text: s, keys_order: r } = a;
    console.log("next"),
      console.log(o.root_text.next),
      r.forEach(t => {
        void 0 === l[t] && (l[t] = "");
        let [n, a] = i[t].split(/{}/);
        e += `${n}<span class="pli-lang" lang="pi">${s[t]}</span><span class="eng-lang" lang="en">${l[t]}</span>${a}\n\n`;
      });
    const c = `<p class="sc-link"><a href="https://suttacentral.net/${t}/en/sujato">On SuttaCentral.net</a></p>`;
    suttaArea.innerHTML = c + e;
    const u = document.querySelector("h1");
    (document.title = u.textContent),
      toggleThePali(),
      (next.innerHTML = o.root_text.next.name
        ? `<a href="?${o.root_text.next.uid}">${o.root_text.next.name}ðŸ –</a>`
        : ""),
      (previous.innerHTML = o.root_text.previous.name
        ? `<a href="?${o.root_text.previous.uid}">ðŸ ” ${o.root_text.previous.name}</a>`
        : "");
  });
}
function toggleThePali() {
  const t = document.getElementById("hide-pali");
  localStorage.paliToggle
    ? "hide" === localStorage.paliToggle && suttaArea.classList.add("hide-pali")
    : (localStorage.paliToggle = "show"),
    t.addEventListener("click", () => {
      "show" === localStorage.paliToggle
        ? (suttaArea.classList.add("hide-pali"), (localStorage.paliToggle = "hide"))
        : (suttaArea.classList.remove("hide-pali"), (localStorage.paliToggle = "show"));
    });
}
function parseSlug(t) {
  const e = t.match(/^([a-z]+)(\d*)\.*(\d*)/),
    n = e[1],
    a = e[2];
  return "dn" === n || "mn" === n
    ? `${n}/${t}`
    : "sn" === n || "an" === n
    ? `${n}/${n}${a}/${t}`
    : "kp" === n
    ? `kn/kp/${t}`
    : "dhp" === n
    ? `kn/dhp/${t}`
    : "ud" === n
    ? `kn/ud/vagga${a}/${t}`
    : "iti" === n
    ? `kn/iti/vagga${findItiVagga(a)}/${t}`
    : "snp" === n
    ? `kn/snp/vagga${a}/${t}`
    : "thag" === n || "thig" === n
    ? `kn/${n}/${t}`
    : void 0;
}
function findItiVagga(t) {
  return t >= 1 && t <= 10
    ? "1"
    : t >= 1 && t <= 10
    ? "1"
    : t >= 11 && t <= 20
    ? "2"
    : t >= 21 && t <= 27
    ? "3"
    : t >= 28 && t <= 37
    ? "4"
    : t >= 38 && t <= 49
    ? "5"
    : t >= 50 && t <= 59
    ? "6"
    : t >= 60 && t <= 69
    ? "7"
    : t >= 70 && t <= 79
    ? "8"
    : t >= 80 && t <= 89
    ? "9"
    : t >= 90 && t <= 99
    ? "10"
    : t >= 100 && t <= 112
    ? "11"
    : void 0;
}
homeButton.addEventListener("click", () => {
  document.location.search = "";
}),
  document.location.search
    ? buildSutta(document.location.search.replace("?", ""))
    : (suttaArea.innerHTML =
        '<div class="instructions">\n  <p>Citations must exactly match those found on SuttaCentral.net. No spaces. Separate chapter and sutta with a period. The following books work:</p>\n  <ul>\n      <li>DN</li>\n      <li>MN</li>\n      <li>SN</li>\n      <li>AN</li>\n      <li>Kp</li>\n      <li>Dhp (must have exact range)</li>\n      <li>Ud</li>\n      <li>Iti (1â€“112)</li>\n      <li>Snp</li>\n      <li>Thag</li>\n      <li>Thig</li>\n  </ul>\n\n  <p>Suttas that are part of a series require that you enter the exact series.</p>\n</div>');
const form = document.getElementById("form"),
  citation = document.getElementById("citation");
form.addEventListener("submit", t => {
  t.preventDefault(), buildSutta(citation.value), (document.location.search = "?" + citation.value);
}),
  (citation.value = document.location.search.replace("?", ""));
